%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
Camera.type: "PinHole"

# Camera calibration and distortion parameters (OpenCV) (equal for both cameras after stereo rectification)
Camera.fx: 695.2362060546875
Camera.fy: 695.2362060546875
Camera.cx: 623.1094360351562
Camera.cy: 342.473388671875

Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0

Camera.width: 1280
Camera.height: 720

# Camera frames per second 
Camera.fps: 30.0

# stereo baseline times fx
Camera.bf: 43.799

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Close/Far threshold. Baseline times.
ThDepth: 35.0 # 35

# Transformation from camera 0 to body-frame (imu)
Tbc: !!opencv-matrix
   rows: 4
   cols: 4
   dt: f
   # data: [ 9.99969423e-01, -2.14005996e-03, -7.52154060e-03, -0.00200,
   #        2.14455765e-03, 9.99971593e-01, 5.89959211e-04, -0.015,
   #       7.52025944e-03, -6.06071549e-04, 9.99971539e-01, -0.00171,
   #        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 1.00000000e+00]
   data: [ 2.14005996e-03,  7.52154060e-03,  9.99969423e-01, -2.00000000e-03,
         -9.99971593e-01, -5.89959211e-04,  2.14455765e-03, -1.50000000e-02,
         6.06071549e-04, -9.99971539e-01,  7.52025944e-03, -1.71000000e-03,
         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,  1.00000000e+00]
# IMU noise
IMU.NoiseGyro: 1.0e-08
IMU.NoiseAcc: 1.0e-08
IMU.GyroWalk: 1.0e-08
IMU.AccWalk: 1.0e-08
IMU.Frequency: 200

#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to pre-rectify the images.
# Camera.fx, .fy, etc must be the same as in LEFT.P
#--------------------------------------------------------------------------------------------
LEFT.height: 720
LEFT.width: 1280
LEFT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-1.71131998e-01, 2.54985001e-02, -1.65324993e-04, 9.60886973e-05, -4.99657989e-11]
LEFT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [701.7449951171875, 0.0, 640.1649780273438, 0.0, 701.6849975585938, 389.2869873046875, 0.0, 0.0, 1.0]
LEFT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.999966347530033, -0.001422739138722922, 0.008079580483432283, 0.001365741834644127, 0.9999741760894847, 0.007055629199258132, -0.008089410156878961, -0.007044357138835809, 0.9999424675829176]
LEFT.Rf:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [0.999966347530033, -0.001422739138722922, 0.008079580483432283, 0.001365741834644127, 0.9999741760894847, 0.007055629199258132, -0.008089410156878961, -0.007044357138835809, 0.9999424675829176]
LEFT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [695.2362060546875, 0, 623.1094360351562, 0,  0, 695.2362060546875, 342.473388671875, 0,  0, 0, 1, 0]

RIGHT.height: 720
RIGHT.width: 1280
RIGHT.D: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [-1.71243995e-01, 2.57284995e-02, 1.35883995e-04, 1.57310002e-04, -1.79887993e-10]
RIGHT.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [699.7150268554688, 0.0, 653.864990234375, 0.0, 699.469970703125, 360.3445129394531, 0.0, 0.0, 1]
RIGHT.R:  !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.9999633526194376, -0.003625811871560086, 0.007755443660172947, 0.003680398547259526, 0.9999684752771629, -0.007035845251224894, -0.007729688520722713, 0.007064130529506649, 0.999945173484644]
RIGHT.P:  !!opencv-matrix
   rows: 3
   cols: 4
   dt: d
   data: [695.2362060546875, 0, 623.1094360351562, 0,  0, 695.2362060546875, 342.473388671875, 0,  0, 0, 1, 0]

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1200

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500

